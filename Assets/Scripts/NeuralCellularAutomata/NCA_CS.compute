#pragma kernel Convolute

RWStructuredBuffer<float> inputBuffer;
int W;
int H;

float Activate(float x)
{
    return -1. / (.6 * x * x) + 1.;
}

[numthreads(8, 8, 1)]
void Convolute(uint3 threadID : SV_DispatchThreadID)
{
    float kernel3x3_mean[3][3] =
    {
        {0.68f, -0.9f, 0.68f, },
        {-0.9f, 0.66f, -0.9f },
        {0.68f, -0.9f, 0.68f }
    };

    int2 inputTexcoord = int2(threadID.xy);

    if (inputTexcoord.x < 0) {
        inputTexcoord.x = W - 1;
    }
    else if (inputTexcoord.x >= W) {
        inputTexcoord.x = 0;
    }

    if (inputTexcoord.y < 0) {
        inputTexcoord.y = H - 1;
    }
    else if (inputTexcoord.y >= H) {
        inputTexcoord.y = 0;
    }

    float sum = 0;
    for (int i = -1; i <= 1; i++) {
        for (int j = -1; j <= 1; j++) {
            float pixelValue = inputBuffer[(inputTexcoord.x + i) + (inputTexcoord.y + j) * W];
            sum += pixelValue * kernel3x3_mean[i + 1][j + 1];
        }
    }
    inputBuffer[threadID.x + threadID.y * W] = Activate(sum);
}